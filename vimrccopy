let mapleader=" "
syntax on
set relativenumber
set number
set belloff=all
set showtabline=2
set tabstop=4
set shiftwidth=4
set expandtab
set autoindent 
set smartindent
set backspace=indent,eol,start

colorscheme mycolors

inoremap {} <Space>{<CR>}<Esc>ko
inoremap {] {}<Esc>i
inoremap (  ()<Esc>i
inoremap jk <Esc>

nnoremap <leader>o o<Esc>
nnoremap <leader>O O<Esc>
nnoremap <leader>/ 0i//<Esc>
nnoremap <leader>u/ 0xx<Esc>
nnoremap <leader>go :tabe<CR>
nnoremap <leader>ge :tabclose<CR>
nnoremap <leader>ff :FZF<CR>

vnoremap <leader>c :w !pbcopy<CR><CR>

call plug#begin('~/.vim/plugged')

Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'

call plug#end()

command! Color call system(expand('~/.vim/scripts/parser/parser') . ' ' . expand('%:p')) | source ~/.vim/after/syntax/c.vim
command! Test echo expand('~/.vim/scripts/parser/parser') . ' ' . expand('%:p')
" command! Color call system('./parser ./test_file.c') | source ~/.vim/after/syntax/c.vim
" command! Color call system('~/.vim/scripts/parsers/parser' . expand('%')) | source ~/.vim/after/syntax/c.vim
